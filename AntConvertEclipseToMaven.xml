<project name="convert-my-stuff-to-maven" default="convertify">

    <dirname property="pwd" file="src"/>

    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml">
        <classpath>
            <fileset dir="../../third-party/ant/">
                <include  name="*.jar"/>
            </fileset>
        </classpath>
    </typedef>

    <target  name="convertify" depends="convert.source, convert.tests, generate.pom"/>

    <target name="convert.source" depends="check.for.source" if="source.exists" description="Convert Source Code to Maven Structure">
        <mkdir dir="src/main/java"/>
		<mkdir dir="src/main/resources"/>
        <svn>
            <add dir="src/main"/>
            <move srcPath="src/net" destPath="src/main/java/" message="I hope this doesn't commit"/>			
        </svn>
    </target>

    <target name="convert.tests" description="Convert Tests to be included in the same module">
        <mkdir dir="src/test/java"/>
		<mkdir dir="src/test/resources"/>
        <svn>
            <add dir="src/test"/>
        </svn>
        <antcall target="move.tests"/>
    </target>

    <target name="move.tests" depends="check.for.test" if="tests.exist" description="Actual moves the tests">
        <svn>
            <move srcPath="${pwd}.tests/src/net" destPath="src/test/java/" message="I hope this doesn't commit"/>
        </svn>
    </target>

    <target  name="pwd">
        <echo>${pwd}.tests</echo>
    </target>
    
    <target name="revert.all" description="Revert all changes done">
        <svn>
            <revert dir="src" recurse="true"/>
            <revert dir="src/net" recurse="true"/>
            <revert dir="src/main" recurse="true"/>
			<revert dir="src/test" recurse="true"/>
			<revert file="pom.xml" />
        </svn>
		<delete dir="src/main"/>
		<delete dir="src/test"/>
		<delete file="pom.xml"/>
    </target>

    <target name="check.for.source">
        <available file="src/net" property="source.exists"/>
    </target>

    <target name="check.for.test">
        <available file="${pwd}.tests" property="tests.exist"/>
    </target>
	
	<target name="check.for.pom">
        <available file="pom.xml" property="pom.exist"/>
    </target>
	
	<target name="generate.pom" depends="check.for.pom" unless="pom.exist" description="Generates POM if it doesn't exist">
		<echo file="pom.xml">
		<![CDATA[
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <parent>
      <artifactId>build-okapi</artifactId>
      <groupId>net.sf.okapi</groupId>
      <version>1.0.0</version>
   </parent>
   <modelVersion>4.0.0</modelVersion>
   <artifactId> (CHANGE ME) module-artifact-id</artifactId>
   <!--Used for display purposes only-->
   <name> (CHANGE ME) Artifact Display Name</name>
   <!--
   <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId> (CHANGE ME or REMOVE ME) common.filters</artifactId>
        <version>${project.version}</version>
      </dependency>
   </dependencies>
   -->
</project>		
		]]>
		</echo>
		<svn>
			<add file="pom.xml"/>
		</svn>
	</target>
</project>
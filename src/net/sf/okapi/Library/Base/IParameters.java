/*===========================================================================*/
/* Copyright (C) 2008 ENLASO Corporation, Okapi Development Team             */
/*---------------------------------------------------------------------------*/
/* This library is free software; you can redistribute it and/or modify it   */
/* under the terms of the GNU Lesser General Public License as published by  */
/* the Free Software Foundation; either version 2.1 of the License, or (at   */
/* your option) any later version.                                           */
/*                                                                           */
/* This library is distributed in the hope that it will be useful, but       */
/* WITHOUT ANY WARRANTY; without even the implied warranty of                */
/* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser   */
/* General Public License for more details.                                  */
/*                                                                           */
/* You should have received a copy of the GNU Lesser General Public License  */
/* along with this library; if not, write to the Free Software Foundation,   */
/* Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA               */
/*                                                                           */
/* See also the full LGPL text here: http://www.gnu.org/copyleft/lesser.html */
/*===========================================================================*/

package net.sf.okapi.Library.Base;

/**
 * This interface provides a way for a component to expose its
 * parameters in a generic way.  
 */
public interface IParameters {

	/**
	 * Reset the parameters to their default values.
	 */
	public void reset ();
	
	/**
	 * Converts the options into a string.
	 * @return The string holding all the options.
	 */
	public String toString ();
	
	/**
	 * Parses the parameters stored into a string back into the object.  
	 * @param p_sData The string holding the options. It must be formatted as 
	 * the string generated by toString(). It can also be null or empty, in
	 * such case the parameters left with their current values. Use reset()
	 * to reset the parameters to their defaults.
	 */
	public void fromString (String p_sData);
	
	/**
	 * Gets the string value of a given parameter.
	 * @param p_sName Name of the parameter (ignores cases).
	 * @return The value of the given parameter.
	 */
	public String getParameter (String p_sName);

	/**
	 * Sets the value of a given parameter.
	 * @param p_sName The name of the parameter (ignores cases).
	 * @param p_sValue The new value. 
	 */
	public void setParameter (String p_sName,
		String p_sValue);
	
	/**
	 * Loads the parameters from a file.
	 * @param p_sPath The full path of the parameters file to load.
	 * @param p_bIgnoreErrors True if the load should ignore any error
	 * such as file not found. If an error occurs and this is set to true,
	 * the method should create the parameters object with its default values. 
	 */
	public void load (String p_sPath,
		boolean p_bIgnoreErrors)
		throws Exception;
	
	/**
	 * Saves the parameters to a file.
	 * @param p_sPath The full path of the parameters file to save.
	 */
	public void save (String p_sPath)
		throws Exception;
}

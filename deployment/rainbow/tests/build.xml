<?xml version="1.0"?> 
<project name="Integration Tests" default="all" basedir="."> 

	<condition property="platform" value="win32-x86">
		<os family="windows"/>
	</condition>
	<condition property="isWindows">
		<os family="windows"/>
	</condition>
	<condition property="platform" value="carbon-macosx">
		<os family="mac"/>
	</condition>
	<condition property="isMac">
		<os family="mac"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86">
		<os name="Linux" arch="x86"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86_64">
		<os name="Linux" arch="x86_64"/>
	</condition>
	<condition property="isLinux">
		<or>
			<equals arg1="${platform}" arg2="gtk2-linux-x86"/>
			<equals arg1="${platform}" arg2="gtk2-linux-x86_64"/>
		</or>
	</condition>
	
	<property name="rainbowHome" value="../dist_${platform}"/>
	<property name="fs" value="${file.separator}"/>
	<condition property="compare" value="fc" else="diff">
		<os family="windows"/>
	</condition>
	<condition property="startDotStar" value="*.*" else="">
		<os family="windows"/>
	</condition>

	<target name="runtests">

		<delete file="_tests_results.txt"/>
		<delete file="miscellaneous/TransComp_MT.txt.html"/>
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="extraction/test1_out"/>
			<fileset dir="extraction/test2_out"/>
			<fileset dir="extraction/test3_out"/>
			<fileset dir="miscellaneous/out"/>
		</delete>

		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/XSLT_Test.rnb -x oku_xsltransform -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/LineBreak_ToDos.rnb -x oku_linebreakconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/EncConv_Test1.rnb -x oku_encodingconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/EncConv_Test2.rnb -x oku_encodingconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/EncConv_Test3.rnb -x oku_encodingconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/TransComp_Test1.rnb -x oku_transcomparison -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/URI_decoded.rnb -x oku_uriconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/URI_encoded_default.rnb -x oku_uriconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/URI_encoded_default_all_extended.rnb -x oku_uriconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/URI_encoded_all_but_uri_marks.rnb -x oku_uriconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/URI_encoded_all_but_uri_marks_and_res.rnb -x oku_uriconversion -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/SearchReplaceFilter_Test.rnb -x oku_searchandreplace -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/SearchReplaceNoFilter_Test.rnb -x oku_searchandreplace -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/SearchReplaceNoFilterRegEx_Test.rnb -x oku_searchandreplace -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p miscellaneous/BOM_Add.rnb -x oku_bomconversion -np"/>
		</exec>
		
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test1_Extraction.rnb -x oku_extraction -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test1_Translation.rnb -x oku_textrewriting -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test1_Merging.rnb -x oku_merging -np"/>
		</exec>
		
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test3_Extraction.rnb -x oku_extraction -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test3_PostProcessing.rnb -x oku_merging -np"/>
		</exec>
		
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test2_Extraction.rnb -x oku_extraction -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test2_Translation.rnb -x oku_textrewriting -np"/>
		</exec>
		<exec executable="java">
		 <arg line="-jar ${rainbowHome}/lib/rainbow.jar -p extraction/Test2_Merging.rnb -x oku_merging -np"/>
		</exec>

	</target>
	
	<target name="compare">
		<exec executable="${compare}" output="_tests_results.txt">
		 <arg line="miscellaneous${fs}gold${fs}${startDotStar} miscellaneous${fs}out${fs}${startDotStar}"/>
		</exec>
		
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.html extraction${fs}test1_gold${fs}*.html"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.xml extraction${fs}test1_gold${fs}*.xml"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.properties extraction${fs}test1_gold${fs}*.properties"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.xlf extraction${fs}test1_gold${fs}*.xlf"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.info extraction${fs}test1_gold${fs}*.info"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test1_out${fs}done${fs}*.po extraction${fs}test1_gold${fs}*.po"/>
		</exec>
		
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.html extraction${fs}test2_gold${fs}*.html"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.xml extraction${fs}test2_gold${fs}*.xml"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.properties extraction${fs}test2_gold${fs}*.properties"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.xlf extraction${fs}test2_gold${fs}*.xlf"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.info extraction${fs}test2_gold${fs}*.info"/>
		</exec>
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test2_out${fs}done${fs}*.po extraction${fs}test2_gold${fs}*.po"/>
		</exec>
		
		<exec executable="${compare}" output="_tests_results.txt" append="true">
		 <arg line="extraction${fs}test3_out${fs}done${fs}*.info extraction${fs}test3_gold${fs}*.info"/>
		</exec>
	</target>
	
	<target name="all" depends="runtests, compare"/>

</project>

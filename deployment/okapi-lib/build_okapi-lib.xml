<?xml version="1.0"?> 
<project name="okapi-lib" default="all" basedir="."> 

	<!-- Get the version information to use from file -->
	<property file="../shared/release.properties" />
	<property name="okapilibStamp" value="${okapilibVersion}${releaseInfo}" />
	<tstamp>
	 <format property="TODAY" pattern="MMM-dd-yyyy"/>
	</tstamp>
	
	<!-- Guess the platform if this build file is not called with the platform already set -->
	<condition property="platform" value="win32-x86">
		<os family="windows"/>
	</condition>
	<condition property="platform" value="carbon-macosx">
		<os family="mac"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86">
		<os name="Linux" arch="x86"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86_64">
		<os name="Linux" arch="x86_64"/>
	</condition>

	<!-- Set flags for what dstribution is being built -->
	<condition property="building-windows">
		<equals arg1="${platform}" arg2="win32-x86"/>
	</condition>
	<condition property="building-mac">
		<equals arg1="${platform}" arg2="carbon-macosx"/>
	</condition>
	<condition property="building-linux">
		<or>
			<equals arg1="${platform}" arg2="gtk2-linux-x86"/>
			<equals arg1="${platform}" arg2="gtk2-linux-x86_64"/>
		</or>
	</condition>

	<property name="distName" value="${ant.project.name}_${platform}_${okapilibStamp}" />

	<echo message=" ------------------------------------------------------------${line.separator}
Distribution being built: ${platform}${line.separator}
Version info: ${okapilibStamp}${line.separator}
Running on: ${os.name} ${os.arch}${line.separator}
------------------------------------------------------------"/>

 	<property name="tmp" value="tmp"/>
	<property name="dist" value="dist_${platform}"/>
	<property name="distlib" value="${dist}/lib"/>
 
	<target name="init">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
			<fileset dir="${dist}"/>
		</delete>
		<mkdir dir="${tmp}"/>
		<mkdir dir="${distlib}"/>
 	</target>

	<target name="compile" depends="init">
		<copy todir="${tmp}/META-INF">
			<fileset dir="data" includes="**/*.txt"/>
		</copy>

		<ant antfile="../shared/build_third-party.stax-wstx.xml" inheritAll="true"/>
		<copy file="../../third-party/${platform}/swt.jar" todir="${distlib}"/>
		
		<ant antfile="../shared/build_common.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.common.xml" inheritAll="true"/>
		<ant antfile="../shared/build_lib.translation.xml" inheritAll="true"/>
		<ant antfile="../shared/build_mt.google.xml" inheritAll="true"/>
		<ant antfile="../shared/build_tm.opentran.xml" inheritAll="true"/>
		<ant antfile="../shared/build_tm.globalsight.xml" inheritAll="true"/>
		<ant antfile="../shared/build_lib.segmentation.xml" inheritAll="true"/>
		
		<ant antfile="../shared/build_filters.html.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.properties.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.po.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.regex.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.xml.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.xliff.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.idml.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.openoffice.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.openxml.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.rtf.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.tmx.xml" inheritAll="true"/>
<!--not ready		<ant antfile="../shared/build_filters.mif.xml" inheritAll="true"/> -->
		<ant antfile="../shared/build_filters.dtd.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.plaintext.xml" inheritAll="true"/>
		<ant antfile="../shared/build_filters.table.xml" inheritAll="true"/>
		
		<ant antfile="../shared/build_pipeline.xml" inheritAll="true"/>
		<ant antfile="../shared/build_steps.common.xml" inheritAll="true"/>
		<ant antfile="../shared/build_steps.all.xml" inheritAll="true"/>

		<!-- UI -->

		<ant antfile="../shared/build_ui.common.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.common.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.lib.segmentation.xml" inheritAll="true"/>

		<ant antfile="../shared/build_ui.filters.properties.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.po.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.openoffice.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.regex.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.plaintext.xml" inheritAll="true"/>
		<ant antfile="../shared/build_ui.filters.table.xml" inheritAll="true"/>

		<!-- DO NOT CHANGE WHITESPACES IN ATTRIBUTE VALUE 
		AND CHECK MANIFEST IN JAR IF YOU ADD/REMOVE JARs -->
		<manifest file="${tmp}/MANIFEST.MF">
			<attribute name="Implementation-Title" value="${ant.project.name}"/>
			<attribute name="Implementation-Version" value="${okapilibStamp}"/>
			<attribute name="Class-Path" value="swt.jar stax-api-1.0.1.jar wstx-lgpl-3.2.8.jar            
jyaml-1.3.jar jericho-html-3.1-dev-5.jar dtdparser121.jar"/>
  		</manifest>

		<jar jarfile="${distlib}/${ant.project.name}.jar" basedir="${tmp}" manifest="${tmp}/MANIFEST.MF"
			excludes="MANIFEST.MF"
  		/>

		<copy todir="${dist}/localweb/devguide">
			<fileset dir="../../website/devguide">
				<exclude name="**/_*"/>
				<exclude name="**/.*"/>
			</fileset>
		</copy>
		<copy todir="${dist}/localweb" file="../../website/okapi.css"/>

		<javadoc destdir="${dist}/localweb/javadoc" Encoding="UTF-8">
			<packageset dir="../../common/net.sf.okapi.common/src" defaultexcludes="yes"/>
			<packageset dir="../../common/net.sf.okapi.filters.common/src" defaultexcludes="yes"/>
			<packageset dir="../../common/net.sf.okapi.pipeline/src" defaultexcludes="yes"/>
			<packageset dir="../../libraries/net.sf.okapi.lib.segmentation/src" defaultexcludes="yes"/>			
		</javadoc>

		<copy todir="${dist}" file="../shared/changes.html"/>
		<replace file="${dist}/changes.html" token="@date@" value="${TODAY}"/>
		<copy todir="${dist}" file="data/readme.html"/>
		<replace file="${dist}/readme.html" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/readme.html" token="@date@" value="${TODAY}"/>
		
		<copy todir="${dist}/config">
			<fileset dir="../shared/config"/>
		</copy>

		<copy todir="${dist}/examples/java">
			<fileset dir="../../examples/java">
				<exclude name="**/.*"/>
				<exclude name="**/bin/**"/>
			</fileset>
		</copy>
		<copy  todir="${dist}/examples/python">
			<fileset dir="../../examples/python">
				<exclude name="**/.*"/>
				<exclude name="**/bin/**"/>
			</fileset>
		</copy>

		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		
	</target>

	<target name="zipAll" unless="building-linux">
		<zip destfile="${dist}/${distName}.zip" basedir="${dist}"/>
	</target>

	<target name="gzipAll" if="building-linux">
		<tar destfile="${dist}/${distName}.tar.gz" basedir="${dist}" compression="gzip"/>
	</target>
	
	<target name="all" depends="compile, zipAll, gzipAll"/>

</project>

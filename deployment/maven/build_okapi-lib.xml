<?xml version="1.0"?> 
<project name="okapi-lib" default="all" basedir="."> 

	<!-- Guess the platform if this build file is not called with the platform already set -->
	<condition property="platform" value="win32-x86">
		<os family="windows"/>
	</condition>
	<condition property="platform" value="cocoa-macosx">
		<os family="mac"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86">
		<os name="Linux" arch="x86"/>
	</condition>
	<condition property="platform" value="gtk2-linux-x86_64">
		<os name="Linux" arch="x86_64"/>
	</condition>

	<!-- Set flags for what dstribution is being built -->
	<condition property="building-windows">
		<equals arg1="${platform}" arg2="win32-x86"/>
	</condition>
	<condition property="building-mac">
		<equals arg1="${platform}" arg2="cacoa-macosx"/>
	</condition>
	<condition property="building-linux">
		<or>
			<equals arg1="${platform}" arg2="gtk2-linux-x86"/>
			<equals arg1="${platform}" arg2="gtk2-linux-x86_64"/>
		</or>
	</condition>

	<!-- Get the version information to use from file -->
	<property file="../shared/release.properties" />
 	
 	<property name="okapilibName" value="okapi-lib"/>
	<property name="okapilibStamp" value="${okapilibVersion}${releaseInfo}" />
	<property name="okapilibJar" value="${okapilibName}-${okapilibStamp}.jar" />

 	<property name="okapilibuiName" value="okapi-lib-ui"/>
	<property name="okapilibuiStamp" value="${okapilibuiVersion}${releaseInfo}" />
	<property name="okapilibuiJar" value="${okapilibuiName}-${okapilibuiStamp}.jar" />

	<property name="tikalStamp" value="${tikalVersion}${releaseInfo}" />
	
 	<property name="tmp" value="tmp"/>
	<property name="dist" value="dist_common"/>
	<property name="done" value="done"/>
	<property name="distLib" value="${dist}/lib"/>
	<property name="distLicenses" value="${distLib}/licenses"/>
	<property name="distName" value="${okapilibName}_all-platforms_${okapilibStamp}" />
	<property name="mavenStore" value="${user.home}/.m2/repository"/>

	<tstamp>
	 <format property="TODAY" pattern="MMM-dd-yyyy"/>
	</tstamp>
	
	<target name="init">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${dist}"/>
		</delete>
		<mkdir dir="${distLib}"/>
		<mkdir dir="${distLicenses}"/>
		<mkdir dir="${done}"/>
 	</target>

	<!-- Make the okapi-lib jar -->
	<target name="okapiLib"> 

		<!-- Prepare tmp dir for creating the jar -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<delete file="tmpJars" quiet="true"/>
		<mkdir dir="${tmp}"/>

		<!-- Copy classes -->
		<copy todir="${tmp}">
			<!-- core -->
			<fileset dir="../../okapi/core/target/classes"
			 excludes="**/META-INF/**"/>
			 
			<!-- filters -->
			<fileset dir="../../okapi/filters/abstractmarkup/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/dtd/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/html/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/idml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/json/target/classes"
			 excludes="**/META-INF/**"/>
<!--			<fileset dir="../../okapi/filters/mif/target/classes"
			 excludes="**/META-INF/**"/>-->
			<fileset dir="../../okapi/filters/openoffice/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/openxml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/pensieve/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/plaintext/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/po/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/php/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/properties/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/regex/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/railsyaml/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/rtf/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/table/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/tmx/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/ttx/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/ts/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/vignette/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/xliff/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/filters/xml/target/classes"
			 excludes="**/META-INF/**"/>
			 
			<!-- lib -->
			<fileset dir="../../okapi/libraries/lib-segmentation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-translation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-extra/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/libraries/lib-search/target/classes"
			 excludes="**/META-INF/**"/>
			
			<!-- tm -->
			<fileset dir="../../okapi/tm/simpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/tm/pensieve/target/classes"
			 excludes="**/META-INF/**"/>

			<!-- connectors -->
			<fileset dir="../../okapi/connectors/opentran/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/simpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/pensieve/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/translatetoolkit/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/globalsight/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/mymemory/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/google/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/apertium/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/microsoft/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/connectors/crosslanguage/target/classes"
			 excludes="**/META-INF/**"/>
<!--not ready yet
			<fileset dir="../../okapi/connectors/promt/target/classes"
			 excludes="**/META-INF/**"/>
-->

			 <!-- steps -->
			<fileset dir="../../okapi/steps/bomconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/charlisting/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/codeshandling/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/common/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/copysourcetotarget/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/diffleverage/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/encodingconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/fullwidthconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/formatconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/generatesimpletm/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/linebreakconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/searchandreplace/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/sentence-aligner/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/segmentation/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/leveraging/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/textmodification/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/tokenization/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/translationcomparison/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/uriconversion/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/wordcount/target/classes"
			 excludes="**/META-INF/**"/>
			<fileset dir="../../okapi/steps/xsltransform/target/classes"
			 excludes="**/META-INF/**"/>
<!--			<fileset dir="../../okapi/steps/xliffkit/target/classes"
			 excludes="**/META-INF/**"/>-->
		</copy>
		
		<!-- Copy lib dependencies -->
		<echo file="tmpJars">okapilibCP=</echo>
		
		<property name="dep001" value="${mavenStore}/dtdparser/dtdparser/1.21"/>
		<fileset id="list.contents" dir="${dep001}"
		 includes="**/dtdparser-1.21.jar"/>
		<property name="jar001" refid="list.contents"/>
		<echo file="tmpJars" append="yes">${jar001}</echo>
		<copy todir="${distLib}" file="${dep001}/${jar001}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/dtdparser-*"/>
		</copy>

		<property name="dep002" value="${mavenStore}/net/htmlparser/jericho/jericho-html/3.1"/>
		<fileset id="list.contents" dir="${dep002}"
		 includes="**/jericho-html-3.1.jar"/>
		<property name="jar002" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar002}</echo>
		<copy todir="${distLib}" file="${dep002}/${jar002}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/jericho-*"/>
		</copy>

		<property name="dep003" value="${mavenStore}/org/yaml/snakeyaml/1.6"/>
		<fileset id="list.contents" dir="${dep003}"
		 includes="**/snakeyaml-1.6.jar"/>
		<property name="jar003" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar003}</echo>
		<copy todir="${distLib}" file="${dep003}/${jar003}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/snakeyaml-*"/>
		</copy>

		<property name="dep005" value="${mavenStore}/com/h2database/h2/1.1.103"/>
		<fileset id="list.contents" dir="${dep005}"
		 includes="**/h2-1.1.103.jar"/>
		<property name="jar005" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar005}</echo>
		<copy todir="${distLib}" file="${dep005}/${jar005}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/h2-*"/>
		</copy>

		<property name="dep006" value="${mavenStore}/org/apache/ws/commons/util/ws-commons-util/1.0.2"/>
		<fileset id="list.contents" dir="${dep006}"
		 includes="**/ws-commons-util-1.0.2.jar"/>
		<property name="jar006" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar006}</echo>
		<copy todir="${distLib}" file="${dep006}/${jar006}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/ws-common-*"/>
		</copy>

		<property name="dep007" value="${mavenStore}/org/apache/xmlrpc/xmlrpc-client/3.1"/>
		<fileset id="list.contents" dir="${dep007}"
		 includes="**/xmlrpc-client-3.1.jar"/>
		<property name="jar007" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar007}</echo>
		<copy todir="${distLib}" file="${dep007}/${jar007}"/>
		<!-- + -->
		<property name="dep008" value="${mavenStore}/org/apache/xmlrpc/xmlrpc-common/3.1"/>
		<fileset id="list.contents" dir="${dep008}"
		 includes="**/xmlrpc-common-3.1.jar"/>
		<property name="jar008" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar008}</echo>
		<copy todir="${distLib}" file="${dep008}/${jar008}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/xmlrpc-*"/>
		</copy>

		<property name="dep009" value="${mavenStore}/com/googlecode/json-simple/json-simple/1.1"/>
		<fileset id="list.contents" dir="${dep009}"
		 includes="**/json-simple-1.1.jar"/>
		<property name="jar009" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar009}</echo>
		<copy todir="${distLib}" file="${dep009}/${jar009}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/json-simple-*"/>
		</copy>

		<property name="dep010" value="${mavenStore}/commons-discovery/commons-discovery/0.2"/>
		<fileset id="list.contents" dir="${dep010}"
		 includes="**/commons-discovery-0.2.jar"/>
		<property name="jar010" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar010}</echo>
		<copy todir="${distLib}" file="${dep010}/${jar010}"/>
		<!-- + -->
		<property name="dep011" value="${mavenStore}/commons-logging/commons-logging/1.0.4"/>
		<fileset id="list.contents" dir="${dep011}"
		 includes="**/commons-logging-1.0.4.jar"/>
		<property name="jar011" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar011}</echo>
		<copy todir="${distLib}" file="${dep011}/${jar011}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/commons-*"/>
		</copy>
		
		<property name="dep012" value="${mavenStore}/org/apache/axis/axis/1.4"/>
		<fileset id="list.contents" dir="${dep012}"
		 includes="**/axis-1.4.jar"/>
		<property name="jar012" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar012}</echo>
		<copy todir="${distLib}" file="${dep012}/${jar012}"/>
		<!-- + -->
		<property name="dep013" value="${mavenStore}/org/apache/axis/axis-jaxrpc/1.4"/>
		<fileset id="list.contents" dir="${dep013}"
		 includes="**/axis-jaxrpc-1.4.jar"/>
		<property name="jar013" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar013}</echo>
		<copy todir="${distLib}" file="${dep013}/${jar013}"/>
		<!-- + -->
		<property name="dep014" value="${mavenStore}/org/apache/axis/axis-saaj/1.4"/>
		<fileset id="list.contents" dir="${dep014}"
		 includes="**/axis-saaj-1.4.jar"/>
		<property name="jar014" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar014}</echo>
		<copy todir="${distLib}" file="${dep014}/${jar014}"/>
		<!-- + -->
		<property name="dep015" value="${mavenStore}/axis/axis-wsdl4j/1.5.1"/>
		<fileset id="list.contents" dir="${dep015}"
		 includes="**/axis-wsdl4j-1.5.1.jar"/>
		<property name="jar015" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar015}</echo>
		<copy todir="${distLib}" file="${dep015}/${jar015}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/axis-*"/>
		</copy>

		<property name="dep018" value="${mavenStore}/org/apache/lucene/lucene-core/3.0.0"/>
		<fileset id="list.contents" dir="${dep018}"
		 includes="**/lucene-core-3.0.0.jar"/>
		<property name="jar018" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar018}</echo>
		<copy todir="${distLib}" file="${dep018}/${jar018}"/>
		<!-- + -->
<!--		<property name="dep019" value="${mavenStore}/org/apache/lucene/lucene-spellchecker/3.0.0"/>
		<fileset id="list.contents" dir="${dep019}"
		 includes="**/lucene-spellchecker-3.0.0.jar"/>
		<property name="jar019" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar019}</echo>
		<copy todir="${distLib}" file="${dep019}/${jar019}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/lucene-*"/>
		</copy>-->

		<property name="dep020" value="${mavenStore}/com/ibm/icu/icu4j/4.0.1"/>
		<fileset id="list.contents" dir="${dep020}"
		 includes="**/icu4j-4.0.1.jar"/>
		<property name="jar020" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar020}</echo>
		<copy todir="${distLib}" file="${dep020}/${jar020}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/icu4j-*"/>
		</copy>

		<property name="dep021" value="${mavenStore}/gnu/trove/trov4j/2.1.0"/>
		<fileset id="list.contents" dir="${dep021}"
		 includes="**/trov4j-2.1.0.jar"/>
		<property name="jar021" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar021}</echo>
		<copy todir="${distLib}" file="${dep021}/${jar021}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/trove-*"/>
		</copy>
		
<!--For xliff-tkit later
		<property name="dep022" value="${mavenStore}/org/apache/poi/poi-ooxml/3.6"/>
		<fileset id="list.contents" dir="${dep022}"
		 includes="**/poi-ooxml-3.6.jar"/>
		<property name="jar022" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar022}</echo>
		<copy todir="${distLib}" file="${dep022}/${jar022}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/poi-ooxml-*"/>
		</copy>

		<property name="dep023" value="${mavenStore}/org/apache/poi/poi/3.6"/>
		<fileset id="list.contents" dir="${dep023}"
		 includes="**/poi-3.6.jar"/>
		<property name="jar023" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar023}</echo>
		<copy todir="${distLib}" file="${dep023}/${jar023}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/poi-*"/>
		</copy>

		<property name="dep024" value="${mavenStore}/dom4j/dom4j/1.6.1"/>
		<fileset id="list.contents" dir="${dep024}"
		 includes="**/dom4j-1.6.1.jar"/>
		<property name="jar024" refid="list.contents"/>
		<echo file="tmpJars" append="yes"> ${jar024}</echo>
		<copy todir="${distLib}" file="${dep024}/${jar024}"/>
		<copy todir="${distLicenses}">
		   <fileset dir="../shared/licenses" includes="**/dom4j-*"/>
		</copy>
-->

		<!-- Create the manifest file -->
		<property file="tmpJars"/>
		<copy todir="${tmp}/META-INF">
			<fileset dir="data/okapi-lib" includes="**/*.txt"/>
		</copy>
		<manifest file="${tmp}/MANIFEST.MF">
			<attribute name="Implementation-Title" value="${okapilibName}"/>
			<attribute name="Implementation-Version" value="${okapilibStamp}"/>
			<attribute name="Class-Path" value="${okapilibCP}"/>
  		</manifest>
		
		<!-- Create the jar file -->
		<jar jarfile="${distLib}/${okapilibJar}" basedir="${tmp}"
		 manifest="${tmp}/MANIFEST.MF"
		 excludes="MANIFEST.MF" />

		<!-- Create directory for dropins -->
		<mkdir dir="${dist}/dropins"/>

		<!-- Copy examples -->
		<copy todir="${dist}/examples">
			<fileset dir="../../okapi/examples/java">
				<exclude name="**/.*"/>
				<exclude name="**/.*/**"/>
				<exclude name="**/target/classes/**"/>
				<exclude name="**/target/maven-archiver/**"/>
			</fileset>
		</copy>
		<!-- Delete normal pom file -->
		<delete file="${dist}/examples/pom.xml" quiet="true"/>
		<!-- And replace it with the one for deployment -->
		<rename src="${dist}/examples/pomForDeployment.xml" dest="${dist}/examples/pom.xml"/>
		
		<replace file="${dist}/examples/pom.xml" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/build_examples.bat" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/build_examples.sh" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/run_examples.bat" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/examples/run_examples.sh" token="@version@" value="${okapilibStamp}"/>

		<!-- Copy config -->
		<copy todir="${dist}/config">
			<fileset dir="../shared/config">
			</fileset>
		</copy>

		<!-- Copy help -->
		<copy todir="${dist}/help">
			<fileset dir="../../help">
				<exclude name="**/applications/rainbow/**"/>
				<exclude name="**/tutorials/**"/>
				<exclude name="**/plugins/**"/>
			</fileset>
		</copy>

		<!-- locaweb -->
		<copy todir="${dist}/localweb/devguide">
			<fileset dir="../../website/devguide">
				<exclude name="**/_*"/>
				<exclude name="**/.*"/>
			</fileset>
		</copy>
		<copy todir="${dist}/localweb" file="../../website/okapi.css"/>
		<!-- javadoc files -->
		<javadoc destdir="${dist}/localweb/javadoc" Encoding="UTF-8">
			<packageset dir="../../okapi/core/src/main/java" defaultexcludes="yes"/>
			<packageset dir="../../okapi/libraries/lib-segmentation/src/main/java" defaultexcludes="yes"/>			
			<packageset dir="../../okapi/libraries/lib-translation/src/main/java" defaultexcludes="yes"/>			
		</javadoc>

	</target>

	<!-- Make Tikal -->
	<target name="tikal">
		<!-- Prepare tmp dir for creating the jar -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<mkdir dir="${tmp}"/>

		<!-- Copy classes -->
		<copy todir="${tmp}">
			<fileset dir="../../okapi/tikal/target/classes"/>
		</copy>
		
		<!-- Create the manifest file -->
		<manifest file="${tmp}/MANIFEST.MF">
			<attribute name="Implementation-Title" value="tikal"/>
			<attribute name="Implementation-Version" value="${tikalStamp}"/>
			<attribute name="Main-Class" value="net.sf.okapi.applications.tikal.Main"/>
			<!-- Note the reference to the UI library to allow access to parameters editors
			when the tool is used in the UI-enabled distribution -->
			<attribute name="Class-Path" value="${okapilibJar} ${okapilibuiJar}"/>
  		</manifest>
		
		<!-- Create the jar file -->
		<jar jarfile="${distLib}/tikal.jar" basedir="${tmp}"
		 manifest="${tmp}/MANIFEST.MF"
		 excludes="MANIFEST.MF" />

		<!-- Copy batch/shell -->
		<copy todir="${dist}">
			<fileset dir="data/okapi-lib" includes="**/tikal*"/>
			<fileset dir="data/okapi-lib" includes="**/startTikal*"/>
		</copy>

		<!-- Update and copy change log and readme -->
		<copy todir="${dist}" file="../shared/changes.html"/>
		<replace file="${dist}/changes.html" token="@date@" value="${TODAY}"/>
		<copy todir="${dist}" file="data/okapi-lib/readme.html"/>
		<replace file="${dist}/readme.html" token="@version@" value="${okapilibStamp}"/>
		<replace file="${dist}/readme.html" token="@date@" value="${TODAY}"/>
		
		<!-- Clean up -->
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${tmp}"/>
		</delete>
		<delete file="tmpJars" quiet="true"/>

	</target>
		
	<target name="zip">
		<zip destfile="${done}/${distName}.zip" basedir="${dist}"/>
		<tar destfile="${done}/${distName}.tar.gz" basedir="${dist}" compression="gzip"/>
	</target>

	<target name="all" depends="init, okapiLib, tikal, zip"/>

</project>
